import{_ as e,c as i,o as s,a2 as t}from"./chunks/framework.DwDoyBw8.js";const m=JSON.parse('{"title":"Getting Assistance","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-assistance.md","filePath":"guide/getting-assistance.md"}'),a={name:"guide/getting-assistance.md"},n=t('<h1 id="getting-assistance" tabindex="-1">Getting Assistance <a class="header-anchor" href="#getting-assistance" aria-label="Permalink to &quot;Getting Assistance&quot;">​</a></h1><p>This guide covers the core functionalities of using Strigi.</p><h2 id="generating-commands-in-natural-language" tabindex="-1">Generating Commands in Natural Language <a class="header-anchor" href="#generating-commands-in-natural-language" aria-label="Permalink to &quot;Generating Commands in Natural Language&quot;">​</a></h2><p>Strigi excels at understanding natural language. Here&#39;s how to leverage this to generate commands:</p><ol><li><p><strong>Open your terminal:</strong> This is where you&#39;ll interact with Strigi.</p></li><li><p><strong>Type your request:</strong> Describe the action you want to perform in natural language. For example, you could type:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;list all files in the current directory&quot;</span></span></code></pre></div></li><li><p><strong>Press Enter:</strong> Strigi will analyze your request and generate a corresponding command.</p></li><li><p><strong>Choose your action</strong>: Once you have the generated command, you&#39;re in control! Here are your options:</p></li></ol><ul><li><strong>Run</strong>: Execute your command by selecting this option, pressing <code>Enter</code>, confirming again, and witnessing the results in your terminal.</li><li><strong>Revise</strong>: Ensure precision by reviewing and modifying the generated command. Select this option, press <code>Enter</code>, and enter your revise prompt.</li><li><strong>Explain</strong>: Gain insights into a command&#39;s purpose and usage. Select this option, press <code>Enter</code>, and delve deeper into its functionality.</li><li><strong>Cancel</strong>: Opt out of the current action by selecting this option and pressing <code>Enter</code>. Alternatively, terminate the interaction pressing <code>Ctrl+C</code>.</li></ul><h2 id="getting-explanations-for-existing-commands" tabindex="-1">Getting Explanations for Existing Commands <a class="header-anchor" href="#getting-explanations-for-existing-commands" aria-label="Permalink to &quot;Getting Explanations for Existing Commands&quot;">​</a></h2><p>Understanding existing commands is another area where Strigi can be helpful:</p><ol><li><p><strong>Type your request:</strong> Use natural language to ask for an explanation of a specific command. For example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> explain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;git status&quot;</span></span></code></pre></div><p>Or, you can alternatively use:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;git status&quot;</span></span></code></pre></div></li><li><p><strong>Press Enter:</strong> Strigi will analyze your request and provide a clear explanation of the command&#39;s purpose, usage, and options.</p></li></ol><h2 id="asking-for-revision" tabindex="-1">Asking for Revision <a class="header-anchor" href="#asking-for-revision" aria-label="Permalink to &quot;Asking for Revision&quot;">​</a></h2><p>Strigi allows you to easily review and modify commands for accuracy and customization. Follow these steps to request a revision:</p><ol><li><p><strong>Open your terminal:</strong> Ensure you&#39;re in the terminal where you interact with Strigi.</p></li><li><p><strong>Type your request:</strong> For example, to revise the command <code>git log</code>, type:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revise</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;git log&quot;</span></span></code></pre></div></li><li><p><strong>Press Enter:</strong> Strigi will process your request and prompt you to enter the desired adjustments.</p></li><li><p><strong>Modify as needed:</strong> Describe your adjustments in natural language for accuracy and precision.</p></li><li><p><strong>Choose your action:</strong> Once you have the revised command, proceed with your desired action as usual.</p></li></ol>',12),o=[n];function r(l,p,g,c,d,h){return s(),i("div",null,o)}const y=e(a,[["render",r]]);export{m as __pageData,y as default};
